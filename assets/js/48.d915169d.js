(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{444:function(t,v,_){"use strict";_.r(v);var a=_(49),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"从输入url到显示页面的过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到显示页面的过程"}},[t._v("#")]),t._v(" 从输入URL到显示页面的过程")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6905931622374342670",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细版"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"阶段一-用户输入阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阶段一-用户输入阶段"}},[t._v("#")]),t._v(" 阶段一：用户输入阶段")]),t._v(" "),_("blockquote",[_("p",[t._v("用户在地址栏输入内容后，浏览器会先判断输入的内容是合法的URL还是搜索内容，如果是搜索内容就合成URL，如果是合法的URL就开始进行加载")])]),t._v(" "),_("h2",{attrs:{id:"阶段二-发起url请求阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阶段二-发起url请求阶段"}},[t._v("#")]),t._v(" 阶段二：发起URL请求阶段")]),t._v(" "),_("blockquote",[_("p",[t._v("发起URL请求主要包括以下步骤：")])]),t._v(" "),_("ol",[_("li",[t._v("构建请求行：浏览器进程会先构建请求行信息，然后通过进程间通信IPC 将URL请求发送给网络进程。")]),t._v(" "),_("li",[t._v("查找缓存： 网络进程获取到URL之后，会先去本地缓存中查找是否有缓存资源，如果有则直接将缓存资源返回给浏览器，否则进入网络请求阶段")]),t._v(" "),_("li",[t._v("DNS解析：网络进程请求首先会从DNS数据缓存服务器中查找是否缓存过当前域名信息，有则直接返回，否则，会进行DNS解析域名对应的IP和端口号")]),t._v(" "),_("li",[t._v("等待TCP队列：chrome有个机制，同一个域名同时最多只能建立6个TCP连接，如果超过这个数量的连接必须进入排队等待状态。")]),t._v(" "),_("li",[t._v("建立TCP连接：通过TCP三次握手与服务器建立连接，然后进行数据传输。")]),t._v(" "),_("li",[t._v("发起HTTP请求：浏览器首先会想服务器发送请求行，请求行中包含了请求方法、请求URI和HTTP版本，还会发送请求头，告诉服务器一些浏览器的相关信息，比如浏览器内核、请求域名、Cookie等信息")]),t._v(" "),_("li",[t._v("服务器处理请求：服务器首先返回相应行，包括协议版本和状态码，然后会返回响应头包含返回的数据类型，服务器要在客户端保存的Cookie等")]),t._v(" "),_("li",[t._v("断开TCP连接：数据传输完成后，通过四次挥手来断开连接")])]),t._v(" "),_("h2",{attrs:{id:"阶段三-准备渲染进程阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阶段三-准备渲染进程阶段"}},[t._v("#")]),t._v(" 阶段三：准备渲染进程阶段")]),t._v(" "),_("ol",[_("li",[t._v("网络进程将获取的数据进行解析，根据响应头中的Content-type来判断响应数据的类型，如果是字节流类型，就将该请求交给下载管理器取下载，如果是text/html类型，就通知浏览器获取到的是HTML，准备渲染进程")]),t._v(" "),_("li",[t._v("一般情况下浏览器的一个tab页面对应一个渲染进程，如果从当前页面打开的新页面并且属于同一站点，这种情况会复用渲染进程，其他情况则需要创建新的渲染进程")])]),t._v(" "),_("h2",{attrs:{id:"阶段四-提交文档阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阶段四-提交文档阶段"}},[t._v("#")]),t._v(" 阶段四：提交文档阶段")]),t._v(" "),_("ol",[_("li",[t._v("渲染进程准备好之后，浏览器会发出提交文档的消息给渲染进程，渲染进程收到消息后，会和网络进程建立传输数据的管道，文档数据传输完成后，渲染进程会返回确认提交的消息给浏览器进程")]),t._v(" "),_("li",[t._v("浏览器收到确认提交的消息后，会更新浏览器的页面状态，包括了安全状态，地址栏的URL，前进后退的历史状态，并更新web页面为空白。")])]),t._v(" "),_("h2",{attrs:{id:"阶段五-页面渲染阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阶段五-页面渲染阶段"}},[t._v("#")]),t._v(" 阶段五：页面渲染阶段")]),t._v(" "),_("ol",[_("li",[t._v("文档提交之后，渲染进程将开始页面解析并加载子资源")]),t._v(" "),_("li",[t._v("构建DOM树：HTML经过解析后输出的是一个以document为顶层节点的树状结构的DOM。")]),t._v(" "),_("li",[t._v("样式计算：将从link标签引入的外部样式，style标签里的样式和元素身上的样式转换成浏览器能够理解的样式表，然后将样式表中的属性值进行标准化，例如：color:red;转换为color的rgb形式，然后根据CSS的继承和层叠规则计算出DOM树中每个节点的具体样式。")]),t._v(" "),_("li",[t._v("布局阶段：会生成一个只包含可见元素的布局树，然后根据布局树的每个节点计算出其具体的位置和大小")]),t._v(" "),_("li",[t._v("分层：对页面中的复杂效果，例如：3D变换，页面滚动或者z轴排序等生成图层树。")]),t._v(" "),_("li",[t._v("绘制：为每个图层生成绘制列表，并将其提交到合成线程中。")]),t._v(" "),_("li",[t._v("光栅化：优先选择可视窗口内的图块来生成位图数据。")]),t._v(" "),_("li",[t._v("合成：所有图块都被光栅化之后开始显示页面。")])]),t._v(" "),_("h3",{attrs:{id:"问题汇总"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题汇总"}},[t._v("#")]),t._v(" 问题汇总")]),t._v(" "),_("blockquote",[_("p",[t._v("浏览器解析HTML的过程，可以从页面渲染阶段来回答")])]),t._v(" "),_("h4",{attrs:{id:"强缓存和协商缓存发生在哪个阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强缓存和协商缓存发生在哪个阶段"}},[t._v("#")]),t._v(" 强缓存和协商缓存发生在哪个阶段")]),t._v(" "),_("blockquote",[_("p",[t._v("强缓存和协商缓存发生在发起URL的请求阶段，在这个阶段构建请求行之后会查找缓存")])]),t._v(" "),_("h4",{attrs:{id:"dns解析中端口需要dns解析吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dns解析中端口需要dns解析吗"}},[t._v("#")]),t._v(" DNS解析中端口需要DNS解析吗？")]),t._v(" "),_("blockquote",[_("p",[t._v("不需要，因为HTTP默认的端口是80，HTTPS默认的是443，如果指定端口可以直接在URL里面添加，如果是https请求，还需要建立TLS连接")])]),t._v(" "),_("h4",{attrs:{id:"哪些阶段可以优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#哪些阶段可以优化"}},[t._v("#")]),t._v(" 哪些阶段可以优化")]),t._v(" "),_("ol",[_("li",[t._v("优化DNS查询：DNS预解析")]),t._v(" "),_("li",[t._v("优化TCP连接：可以通过请求头keep-alive来优化")]),t._v(" "),_("li",[t._v("优化HTTP响应报文：通过CDN和Gzip压缩")])])])}),[],!1,null,null,null);v.default=r.exports}}]);